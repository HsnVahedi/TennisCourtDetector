name: PreviewAction

on:
  pull_request:
    types: [closed]
    branches: [ "preview" ]

jobs:
  preview:
    # Only run this job if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Push Docker Images
        uses: ./.github/actions/inference/build-and-push
        with:
          ecr_registry: ${{ secrets.ECR_REGISTRY }}
          ecr_repository: ${{ secrets.ECR_REPOSITORY }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          inference_image: ${{ secrets.ECR_REPOSITORY }}:inference-${{ github.sha }}
          pipeline_image: ${{ secrets.ECR_REPOSITORY }}:realtime-inference-pipeline-${{ github.sha }}

      # - name: Build preview pipeline container
      #   run: |
      #     docker build \
      #       -t preview-pipeline-docker \
      #       -f docker/training/PipelineDockerfile \
      #       .


      - name: Log into Amazon ECR
        shell: bash
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Get Training Run ID
        run: |
          aws s3 cp s3://${{ secrets.S3_BUCKET }}/run_ids/${{ github.sha }}_run_id.txt run_id.txt
          echo "MLFLOW_RUN_ID=$(cat run_id.txt)" >> $GITHUB_ENV

      - name: Run Preview Pipeline Container
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          SAGE_MAKER_EXECUTION_ROLE: ${{ secrets.SAGE_MAKER_EXECUTION_ROLE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ steps.configure-aws-credentials.outputs.aws_session_token }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          MLFLOW_TRACKING_ARN: ${{ secrets.MLFLOW_TRACKING_ARN }}
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          GITHUB_SHA: ${{ github.sha }}
          SOURCE_BRANCH: ${{ github.event.pull_request.head.ref }}
          MLFLOW_RUN_ID: ${{ env.MLFLOW_RUN_ID }}
        run: |
          docker run --rm \
            -e S3_BUCKET \
            -e SAGE_MAKER_EXECUTION_ROLE \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY \
            -e AWS_SESSION_TOKEN \
            -e AWS_REGION \
            -e MLFLOW_TRACKING_ARN \
            -e ECR_REGISTRY \
            -e ECR_REPOSITORY \
            -e GITHUB_SHA \
            -e SOURCE_BRANCH \
            -e MLFLOW_RUN_ID \
            ${{ secrets.ECR_REPOSITORY }}:realtime-inference-pipeline-${{ github.sha }} \
            conda run -n pipeline-env python /opt/ml/code/pipeline.py
