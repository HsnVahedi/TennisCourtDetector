name: "Build and Push Docker"
description: "Build and push Docker images to ECR"

inputs:
  ecr_registry:
    description: "ECR registry domain"
    required: true
  ecr_repository:
    description: "ECR repository name"
    required: true
  aws_access_key_id:
    description: "AWS access key ID"
    required: true
  aws_secret_access_key:
    description: "AWS secret access key"
    required: true
  aws_region:
    description: "AWS region"
    required: true
  training_image:
    description: "Training image"
    required: true
  pipeline_image:
    description: "Training Pipeline image"
    required: true
  image_tag:
    description: "Image tag"
    required: true
  docker_changed:
    description: "Boolean indicating if docker files have changed"
    required: true
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}

    # - name: Log docker_changed input
    #   shell: bash
    #   run: |
    #     echo "docker_changed input value: ${{ inputs.docker_changed }}"

    - name: Log into Amazon ECR
      if: inputs.docker_changed == 'true'
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ inputs.aws_region }} \
        | docker login --username AWS --password-stdin ${{ inputs.ecr_registry }}

    - name: Build Training Image
      if: inputs.docker_changed == 'true'
      shell: bash
      run: |
        docker build -t ${{ inputs.training_image }}:${{ inputs.image_tag }} -f docker/training/Dockerfile .
        docker tag ${{ inputs.training_image }}:${{ inputs.image_tag }} \
          ${{ inputs.ecr_registry }}/${{ inputs.training_image }}:${{ inputs.image_tag }}
        docker tag ${{ inputs.training_image }}:${{ inputs.image_tag }} \
          ${{ inputs.ecr_registry }}/${{ inputs.training_image }}:latest

    - name: Push Training Image
      if: inputs.docker_changed == 'true'
      shell: bash
      run: |
        docker push ${{ inputs.ecr_registry }}/${{ inputs.training_image }}:${{ inputs.image_tag }}
        docker push ${{ inputs.ecr_registry }}/${{ inputs.training_image }}:latest

    # - name: Build Inference Image
    #   shell: bash
    #   run: |
    #     docker build -t ${{ inputs.ecr_repository }}:infer-${{ github.sha }} -f docker/inference/Dockerfile .
    #     docker tag ${{ inputs.ecr_repository }}:infer-${{ github.sha }} \
    #       ${{ inputs.ecr_registry }}/${{ inputs.ecr_repository }}:infer-${{ github.sha }}

    # - name: Push Inference Image
    #   shell: bash
    #   run: |
    #     docker push ${{ inputs.ecr_registry }}/${{ inputs.ecr_repository }}:infer-${{ github.sha }}

    - name: Build Pipeline Image
      if: inputs.docker_changed == 'true'
      shell: bash
      run: |
        docker build -t ${{ inputs.pipeline_image }}:${{ inputs.image_tag }} -f docker/training/PipelineDockerfile .
        docker tag ${{ inputs.pipeline_image }}:${{ inputs.image_tag }} \
          ${{ inputs.ecr_registry }}/${{ inputs.pipeline_image }}:${{ inputs.image_tag }}
        docker tag ${{ inputs.pipeline_image }}:${{ inputs.image_tag }} \
          ${{ inputs.ecr_registry }}/${{ inputs.pipeline_image }}:latest

    - name: Push Pipeline Image
      if: inputs.docker_changed == 'true'
      shell: bash
      run: |
        docker push ${{ inputs.ecr_registry }}/${{ inputs.pipeline_image }}:${{ inputs.image_tag }}
        docker push ${{ inputs.ecr_registry }}/${{ inputs.pipeline_image }}:latest 